Project Description: Code Sketch System

The Code Sketch System is a tool designed to assist developers in writing code via Large Language Models (LLMs). It introduces a semi-formal pseudocode format that allows developers to create flexible, annotated outlines of code, which are then interpreted and either expanded by LLMs into full, production-ready code, or into an LLM-annotated revision of the Sketch (the LLM's annotations are questions and comments to help the developer refine their spec prior to final code generation).

Here's the prompt which the Code Sketch app is designed to facilitate working with:

```
## Code Sketch system description

A "Code Sketch" is a particular language/format which developers write in in order to guide LLMs to author code. Their sketches will come in varying levels of detail; it is your responsibility to take this sketch/spec and translate it into production-level, complete code. The core of this task is expertly "filling in the blanks": the pseudocode they write provides a basic frameworkâ€”but it will be incomplete and informal. The ideal way of reading their spec is to take collectively everything that's been stated within it to understand their intentions, and to use your understanding of their intentions to produce the corresponding production code.

## Basic Structure
<code_sketch>
    [file]: Filename for the generated code.
    [purpose]: Describes the overall purpose or functionality of the code.
    [target_lang]: Specifies the target/output programming language.
    [custom_config]: A map of arbitrary custom/user-defined properties and values to guide the generation process.

    <sketch>
        The core sketch content goes here.

        The sketch is a kind of mixed pseudocode that may involve syntactic statements from a particular language, along with free-form indications for the LLM to help guide its inference on how to "fill in the blanks". Comments should be interpreted as messages from the user to the LLM.
    </sketch>
</code_sketch>

## Actual Task

The following is a Code Sketch written by a developer and is ready for you to process:

<code_sketch>...</code_sketch>

Please generate corresponding production quality code that you believe best satisfies their intentions expressed through the spec. Please wrap your generated code in <code file=user_given_filename> ... </code>. Do NOT use placeholders; the resulting code should be directly executable.
```

The prompt could be used standalone, but the app makes it easier to work with, streamlines the process.

Project Structure:
- Frontend: A React-based web application with a dual-view interface:
  - Left panel: Code Sketch editor for inputting pseudocode and annotations.
  - Right panel: Displays generated code or LLM-annotated Sketch (with questions and comments).
- Backend: Node.js server handling communication with various LLM services (e.g., OpenAI, Anthropic, local LLMs via Ollama).

User Workflow:
1. Users input their Code Sketch in the left panel, including metadata like target language and purpose.
2. They can "check" their sketch for LLM feedback or "generate" to produce full code.
3. Results are displayed in the right panel; if they requested a "generate" then the full code will be displayed; if they requested a "check" then an LLM-annotated version of their Sketch will be displayed.